function initContentAnimations() {
    if (!window.gsap || !window.ScrollTrigger) return;

    gsap.registerPlugin(ScrollTrigger);
    ScrollTrigger.getAll().forEach(st => st.kill());

    // ===== CONTENT CONTAINER SYNC WITH BACKGROUND (SLIGHT DELAY) =====
    const contentBlocks = document.querySelectorAll('.gsap-content');
    gsap.set(contentBlocks, { opacity: 0, y: 50 });

    contentBlocks.forEach((content, idx) => {
        const section = content.closest('.section-card');
        if (!section) return;
        const isLast = idx === contentBlocks.length - 1;
        ScrollTrigger.create({
            trigger: section,
            start: "top 90%", // Start fade in as soon as section enters viewport
            end: isLast ? "bottom bottom" : "bottom top", // For last section, keep visible until very end
            onEnter: () => gsap.to(content, {
                opacity: 1,
                duration: 0.7,
                ease: "power2.out"
            }),
            onLeave: () => gsap.to(content, {
                opacity: 0,
                duration: 1.2,
                ease: "power2.inOut"
            }),
            onEnterBack: () => gsap.to(content, {
                opacity: 1,
                duration: 0.7,
                ease: "power2.out"
            }),
            onLeaveBack: () => gsap.to(content, {
                opacity: 0,
                duration: 1.2,
                ease: "power2.inOut"
            }),
            markers: false
        });
        // Scrubbed y animation: slide up as you scroll through the section
        gsap.to(content, {
            y: -80,
            ease: "none",
            scrollTrigger: {
                trigger: section,
                start: "top 95%",
                end: isLast ? "bottom bottom" : "top 5%",
                scrub: true
            }
        });
    });

    // ===== NAVIGATION HIGHLIGHTING WITH SCROLLTRIGGER =====
    const sections = document.querySelectorAll('.section-card');
    const navLinks = document.querySelectorAll('nav ul li a');
    
    // Create a ScrollTrigger for each section
    sections.forEach(section => {
        const id = section.getAttribute('id');
        if (!id) return;
        
        // Find corresponding navigation link
        const link = document.querySelector(`nav ul li a[href="#${id}"]`);
        if (!link) return;
        
        ScrollTrigger.create({
            trigger: section,
            start: "top 50%", 
            end: "bottom 40%",
            onToggle: self => {
                if (self.isActive) {
                    // Remove active class from all links first
                    navLinks.forEach(navLink => navLink.classList.remove('active'));
                    // Add active class to the corresponding link
                    link.classList.add('active');
                }
            }
        });
    });
    
    // Special case for home section
    const homeSection = document.getElementById('home');
    if (homeSection) {
        ScrollTrigger.create({
            trigger: homeSection,
            start: "top 0%",
            end: "bottom 50%",
            onToggle: self => {
                if (self.isActive) {
                    const homeLink = document.querySelector('nav ul li a[href="#home"]');
                    if (homeLink) {
                        navLinks.forEach(navLink => navLink.classList.remove('active'));
                        homeLink.classList.add('active');
                    }
                }
            }
        });
    }

    // ===== FLOATING ELEMENTS (ORIGINAL GSAP.HTML STYLE) =====
    const particles = gsap.utils.toArray('.floating-particle');
    particles.forEach((particle, i) => {
        // Reset styles to match original
        gsap.set(particle, {
            background: "radial-gradient(circle, rgba(255,255,255,0.4) 0%, transparent 70%)",
            width: "150px",
            height: "150px",
            filter: "blur(15px)"
        });

        // Original animation parameters
        const duration = 20 + Math.random() * 20;
        const movement = 100 + Math.random() * 200;
        
        gsap.to(particle, {
            x: `+=${movement}`,
            y: `+=${movement * 0.7}`,
            duration: duration,
            ease: "sine.inOut",
            repeat: -1,
            yoyo: true
        });

        // Original parallax effect
        ScrollTrigger.create({
            trigger: "body",
            start: "top top",
            end: "bottom bottom",
            onUpdate: (self) => {
                gsap.to(particle, {
                    y: `+=${self.getVelocity() * 0.2}`,
                    duration: 0.8
                });
            }
        });
    });

    // ===== HERO → ABOUT DEDICATED BACKGROUND FADE-IN & ZOOM =====
    const heroSection = document.getElementById('home');
    const aboutBg = document.querySelector('.bg-image[data-section="about"]');
    if (heroSection && aboutBg) {
        gsap.set(aboutBg, { opacity: 0, scale: 1.05 }); // Start hidden and slightly zoomed
        ScrollTrigger.create({
            trigger: heroSection,
            start: "bottom 90%", // Start fade-in/zoom-in as hero is leaving
            end: "bottom top",   // End when hero is fully gone
            scrub: true,
            onUpdate: self => {
                // Animate opacity and scale based on scroll progress
                gsap.to(aboutBg, {
                    opacity: self.progress,
                    scale: 1.05 - 0.05 * self.progress, // 1.05 → 1 as progress goes 0→1
                    overwrite: 'auto',
                    duration: 0.1,
                    ease: 'none'
                });
            }
        });
    }

    // ===== SECTION BACKGROUND CROSSFADE & ZOOM (for all except About) =====
    const bgImages = gsap.utils.toArray('.bg-image');
    document.querySelectorAll('.section-card:not(#home)').forEach((section, i) => {
        const sectionId = section.getAttribute('id');
        if (sectionId === 'about') return; // About handled above
        const bg = document.querySelector(`.bg-image[data-section="${sectionId}"]`);
        if (!bg) return;
        ScrollTrigger.create({
            trigger: section,
            start: "top bottom",
            end: "bottom top",
            onEnter: () => {
                gsap.to(bg, { opacity: 1, scale: 1, duration: 2, ease: "power2.inOut" }); // Fade in, zoom in
                // Crossfade: fade out previous if it exists
                if (i > 0) {
                    // Find previous section (skip About)
                    let prevSection = section.previousElementSibling;
                    while (prevSection && (!prevSection.classList || !prevSection.classList.contains('section-card') || prevSection.getAttribute('id') === 'about')) {
                        prevSection = prevSection.previousElementSibling;
                    }
                    if (prevSection) {
                        const prevId = prevSection.getAttribute('id');
                        const prevBg = document.querySelector(`.bg-image[data-section="${prevId}"]`);
                        if (prevBg) gsap.to(prevBg, { opacity: 0, scale: 1.05, duration: 2, ease: "power2.inOut" }); // Fade out, zoom out
                    }
                }
            },
            onLeaveBack: () => {
                gsap.to(bg, { opacity: 0, scale: 1.05, duration: 2, ease: "power2.inOut" }); // Fade out, zoom out
                // Fade previous back in if it exists
                if (i > 0) {
                    let prevSection = section.previousElementSibling;
                    while (prevSection && (!prevSection.classList || !prevSection.classList.contains('section-card') || prevSection.getAttribute('id') === 'about')) {
                        prevSection = prevSection.previousElementSibling;
                    }
                    if (prevSection) {
                        const prevId = prevSection.getAttribute('id');
                        const prevBg = document.querySelector(`.bg-image[data-section="${prevId}"]`);
                        if (prevBg) gsap.to(prevBg, { opacity: 1, scale: 1, duration: 2, ease: "power2.inOut" }); // Fade in, zoom in
                    }
                }
            }
        });
    });
}

// IMPORTANT: DO NOT INITIALIZE SWIPER HERE ANYMORE - Using direct script in HTML

// Initialize after page load
document.addEventListener('DOMContentLoaded', function() {
    initContentAnimations();
    // initHeroSwiper() - REMOVED: Now using inline initialization in HTML
    
    // Handle mobile menu toggle
    const hamburger = document.querySelector('.hamburger');
    const nav = document.querySelector('nav');
    
    if (hamburger) {
        hamburger.addEventListener('click', function() {
            this.classList.toggle('active');
            nav.classList.toggle('active');
        });
    }
    
    // Close menu when a link is clicked
    const navLinks = document.querySelectorAll('nav ul li a');
    navLinks.forEach(link => {
        link.addEventListener('click', function() {
            if (hamburger && hamburger.classList.contains('active')) {
                hamburger.classList.remove('active');
                nav.classList.remove('active');
            }
        });
    });
    
    // Add CSS diagnostic to check if swiper is working
    console.log('DOM Content Loaded - animations.js');
    console.log('Swiper availability:', typeof Swiper !== 'undefined' ? 'Available' : 'Not available');
    console.log('Hero swiper element:', document.querySelector('.hero-swiper') ? 'Found' : 'Not found');
});